(define (fast-mult-iter a b n)
  (cond ((= n 1) a)
	((even? n)
	 (fast-mult-iter
	  (* a (square b))
	  (square b)
	  (- (/ n 2) 1)))
	(else (fast-expt-iter (* a b) b (- n 1)))))

(define (double n)
  (+ n n))

(define (halve n)
  (/ n 2))

(define (even? n)
  (= (remainder n 2) 0))


	 
